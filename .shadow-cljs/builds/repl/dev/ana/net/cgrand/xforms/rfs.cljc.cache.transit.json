["^ ","~:output",["^ ","~:js","goog.provide('net.cgrand.xforms.rfs');\ngoog.require('cljs.core');\ngoog.require('goog.string.StringBuffer');\nnet.cgrand.xforms.rfs.cmp = (function net$cgrand$xforms$rfs$cmp(f,a,b){\nvar r = (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(a,b) : f.call(null,a,b));\nif(typeof r === 'number'){\nreturn r;\n} else {\nif(cljs.core.truth_(r)){\nreturn (-1);\n} else {\nif(cljs.core.truth_((f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(b,a) : f.call(null,b,a)))){\nreturn (1);\n} else {\nreturn (0);\n\n}\n}\n}\n});\n\nnet.cgrand.xforms.rfs.minimum = (function net$cgrand$xforms$rfs$minimum(var_args){\nvar G__42956 = arguments.length;\nswitch (G__42956) {\ncase 1:\nreturn net.cgrand.xforms.rfs.minimum.cljs$core$IFn$_invoke$arity$1((arguments[(0)]));\n\nbreak;\ncase 2:\nreturn net.cgrand.xforms.rfs.minimum.cljs$core$IFn$_invoke$arity$2((arguments[(0)]),(arguments[(1)]));\n\nbreak;\ndefault:\nthrow (new Error([\"Invalid arity: \",cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join('')));\n\n}\n});\n\nnet.cgrand.xforms.rfs.minimum.cljs$core$IFn$_invoke$arity$1 = (function (comparator){\nreturn (function() {\nvar G__42996 = null;\nvar G__42996__0 = (function (){\nreturn null;\n});\nvar G__42996__1 = (function (x){\nreturn x;\n});\nvar G__42996__2 = (function (a,b){\nif((a == null)){\nreturn b;\n} else {\nif((b == null)){\nreturn a;\n} else {\nif((net.cgrand.xforms.rfs.cmp(comparator,a,b) > (0))){\nreturn b;\n} else {\nreturn a;\n\n}\n}\n}\n});\nG__42996 = function(a,b){\nswitch(arguments.length){\ncase 0:\nreturn G__42996__0.call(this);\ncase 1:\nreturn G__42996__1.call(this,a);\ncase 2:\nreturn G__42996__2.call(this,a,b);\n}\nthrow(new Error('Invalid arity: ' + arguments.length));\n};\nG__42996.cljs$core$IFn$_invoke$arity$0 = G__42996__0;\nG__42996.cljs$core$IFn$_invoke$arity$1 = G__42996__1;\nG__42996.cljs$core$IFn$_invoke$arity$2 = G__42996__2;\nreturn G__42996;\n})()\n});\n\nnet.cgrand.xforms.rfs.minimum.cljs$core$IFn$_invoke$arity$2 = (function (comparator,absolute_maximum){\nreturn (function() {\nvar G__42997 = null;\nvar G__42997__0 = (function (){\nreturn new cljs.core.Keyword(\"net.cgrand.xforms.rfs\",\"+\\u221E\",\"net.cgrand.xforms.rfs/+\\u221E\",-1802605567);\n});\nvar G__42997__1 = (function (x){\nif(cljs.core.keyword_identical_QMARK_(new cljs.core.Keyword(\"net.cgrand.xforms.rfs\",\"+\\u221E\",\"net.cgrand.xforms.rfs/+\\u221E\",-1802605567),x)){\nreturn absolute_maximum;\n} else {\nreturn x;\n}\n});\nvar G__42997__2 = (function (a,b){\nif(((cljs.core.keyword_identical_QMARK_(new cljs.core.Keyword(\"net.cgrand.xforms.rfs\",\"+\\u221E\",\"net.cgrand.xforms.rfs/+\\u221E\",-1802605567),a)) || ((net.cgrand.xforms.rfs.cmp(comparator,a,b) > (0))))){\nreturn b;\n} else {\nreturn a;\n}\n});\nG__42997 = function(a,b){\nswitch(arguments.length){\ncase 0:\nreturn G__42997__0.call(this);\ncase 1:\nreturn G__42997__1.call(this,a);\ncase 2:\nreturn G__42997__2.call(this,a,b);\n}\nthrow(new Error('Invalid arity: ' + arguments.length));\n};\nG__42997.cljs$core$IFn$_invoke$arity$0 = G__42997__0;\nG__42997.cljs$core$IFn$_invoke$arity$1 = G__42997__1;\nG__42997.cljs$core$IFn$_invoke$arity$2 = G__42997__2;\nreturn G__42997;\n})()\n});\n\nnet.cgrand.xforms.rfs.minimum.cljs$lang$maxFixedArity = 2;\n\n\nnet.cgrand.xforms.rfs.maximum = (function net$cgrand$xforms$rfs$maximum(var_args){\nvar G__42958 = arguments.length;\nswitch (G__42958) {\ncase 1:\nreturn net.cgrand.xforms.rfs.maximum.cljs$core$IFn$_invoke$arity$1((arguments[(0)]));\n\nbreak;\ncase 2:\nreturn net.cgrand.xforms.rfs.maximum.cljs$core$IFn$_invoke$arity$2((arguments[(0)]),(arguments[(1)]));\n\nbreak;\ndefault:\nthrow (new Error([\"Invalid arity: \",cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join('')));\n\n}\n});\n\nnet.cgrand.xforms.rfs.maximum.cljs$core$IFn$_invoke$arity$1 = (function (comparator){\nreturn (function() {\nvar G__42999 = null;\nvar G__42999__0 = (function (){\nreturn null;\n});\nvar G__42999__1 = (function (x){\nreturn x;\n});\nvar G__42999__2 = (function (a,b){\nif((a == null)){\nreturn b;\n} else {\nif((b == null)){\nreturn a;\n} else {\nif((net.cgrand.xforms.rfs.cmp(comparator,a,b) < (0))){\nreturn b;\n} else {\nreturn a;\n\n}\n}\n}\n});\nG__42999 = function(a,b){\nswitch(arguments.length){\ncase 0:\nreturn G__42999__0.call(this);\ncase 1:\nreturn G__42999__1.call(this,a);\ncase 2:\nreturn G__42999__2.call(this,a,b);\n}\nthrow(new Error('Invalid arity: ' + arguments.length));\n};\nG__42999.cljs$core$IFn$_invoke$arity$0 = G__42999__0;\nG__42999.cljs$core$IFn$_invoke$arity$1 = G__42999__1;\nG__42999.cljs$core$IFn$_invoke$arity$2 = G__42999__2;\nreturn G__42999;\n})()\n});\n\nnet.cgrand.xforms.rfs.maximum.cljs$core$IFn$_invoke$arity$2 = (function (comparator,absolute_minimum){\nreturn (function() {\nvar G__43000 = null;\nvar G__43000__0 = (function (){\nreturn new cljs.core.Keyword(\"net.cgrand.xforms.rfs\",\"-\\u221E\",\"net.cgrand.xforms.rfs/-\\u221E\",730866277);\n});\nvar G__43000__1 = (function (x){\nif(cljs.core.keyword_identical_QMARK_(new cljs.core.Keyword(\"net.cgrand.xforms.rfs\",\"-\\u221E\",\"net.cgrand.xforms.rfs/-\\u221E\",730866277),x)){\nreturn absolute_minimum;\n} else {\nreturn x;\n}\n});\nvar G__43000__2 = (function (a,b){\nif(((cljs.core.keyword_identical_QMARK_(new cljs.core.Keyword(\"net.cgrand.xforms.rfs\",\"-\\u221E\",\"net.cgrand.xforms.rfs/-\\u221E\",730866277),a)) || ((net.cgrand.xforms.rfs.cmp(comparator,a,b) < (0))))){\nreturn b;\n} else {\nreturn a;\n}\n});\nG__43000 = function(a,b){\nswitch(arguments.length){\ncase 0:\nreturn G__43000__0.call(this);\ncase 1:\nreturn G__43000__1.call(this,a);\ncase 2:\nreturn G__43000__2.call(this,a,b);\n}\nthrow(new Error('Invalid arity: ' + arguments.length));\n};\nG__43000.cljs$core$IFn$_invoke$arity$0 = G__43000__0;\nG__43000.cljs$core$IFn$_invoke$arity$1 = G__43000__1;\nG__43000.cljs$core$IFn$_invoke$arity$2 = G__43000__2;\nreturn G__43000;\n})()\n});\n\nnet.cgrand.xforms.rfs.maximum.cljs$lang$maxFixedArity = 2;\n\n\nnet.cgrand.xforms.rfs.min = net.cgrand.xforms.rfs.minimum.cljs$core$IFn$_invoke$arity$1(cljs.core.compare);\n\nnet.cgrand.xforms.rfs.max = net.cgrand.xforms.rfs.maximum.cljs$core$IFn$_invoke$arity$1(cljs.core.compare);\n\n/**\n * Reducing fn to compute the arithmetic mean.\n */\nnet.cgrand.xforms.rfs.avg = (function net$cgrand$xforms$rfs$avg(var_args){\nvar G__42960 = arguments.length;\nswitch (G__42960) {\ncase 0:\nreturn net.cgrand.xforms.rfs.avg.cljs$core$IFn$_invoke$arity$0();\n\nbreak;\ncase 1:\nreturn net.cgrand.xforms.rfs.avg.cljs$core$IFn$_invoke$arity$1((arguments[(0)]));\n\nbreak;\ncase 2:\nreturn net.cgrand.xforms.rfs.avg.cljs$core$IFn$_invoke$arity$2((arguments[(0)]),(arguments[(1)]));\n\nbreak;\ncase 3:\nreturn net.cgrand.xforms.rfs.avg.cljs$core$IFn$_invoke$arity$3((arguments[(0)]),(arguments[(1)]),(arguments[(2)]));\n\nbreak;\ndefault:\nthrow (new Error([\"Invalid arity: \",cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join('')));\n\n}\n});\n\nnet.cgrand.xforms.rfs.avg.cljs$core$IFn$_invoke$arity$0 = (function (){\nreturn null;\n});\n\nnet.cgrand.xforms.rfs.avg.cljs$core$IFn$_invoke$arity$1 = (function (acc){\nif(cljs.core.truth_(acc)){\nreturn ((acc[(1)]) / (acc[(0)]));\n} else {\nreturn null;\n}\n});\n\nnet.cgrand.xforms.rfs.avg.cljs$core$IFn$_invoke$arity$2 = (function (acc,x){\nreturn net.cgrand.xforms.rfs.avg.cljs$core$IFn$_invoke$arity$3(acc,x,(1));\n});\n\nnet.cgrand.xforms.rfs.avg.cljs$core$IFn$_invoke$arity$3 = (function (acc,x,w){\nvar acc__$1 = (function (){var or__4131__auto__ = acc;\nif(cljs.core.truth_(or__4131__auto__)){\nreturn or__4131__auto__;\n} else {\nreturn [0.0,0.0];\n}\n})();\nvar G__42962 = acc__$1;\n(G__42962[(0)] = ((acc__$1[(0)]) + w));\n\n(G__42962[(1)] = ((acc__$1[(1)]) + (w * x)));\n\nreturn G__42962;\n});\n\nnet.cgrand.xforms.rfs.avg.cljs$lang$maxFixedArity = 3;\n\n\n/**\n * Reducing fn to compute the standard deviation. Returns 0 if no or only one item.\n */\nnet.cgrand.xforms.rfs.sd = (function net$cgrand$xforms$rfs$sd(var_args){\nvar G__42972 = arguments.length;\nswitch (G__42972) {\ncase 0:\nreturn net.cgrand.xforms.rfs.sd.cljs$core$IFn$_invoke$arity$0();\n\nbreak;\ncase 1:\nreturn net.cgrand.xforms.rfs.sd.cljs$core$IFn$_invoke$arity$1((arguments[(0)]));\n\nbreak;\ncase 2:\nreturn net.cgrand.xforms.rfs.sd.cljs$core$IFn$_invoke$arity$2((arguments[(0)]),(arguments[(1)]));\n\nbreak;\ndefault:\nthrow (new Error([\"Invalid arity: \",cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join('')));\n\n}\n});\n\nnet.cgrand.xforms.rfs.sd.cljs$core$IFn$_invoke$arity$0 = (function (){\nreturn [0.0,0.0,0.0];\n});\n\nnet.cgrand.xforms.rfs.sd.cljs$core$IFn$_invoke$arity$1 = (function (a){\nvar s = (a[(0)]);\nvar n = (a[(2)]);\nif(((1) < n)){\nvar G__42973 = (s / (n - (1)));\nreturn Math.sqrt(G__42973);\n} else {\nreturn 0.0;\n}\n});\n\nnet.cgrand.xforms.rfs.sd.cljs$core$IFn$_invoke$arity$2 = (function (a,x){\nvar s = (a[(0)]);\nvar m = (a[(1)]);\nvar n = (a[(2)]);\nvar d = (x - m);\nvar n__$1 = (n + (1));\nvar m_SINGLEQUOTE_ = (m + (d / n__$1));\nvar G__42974 = a;\n(G__42974[(0)] = (s + (d * (x - m_SINGLEQUOTE_))));\n\n(G__42974[(1)] = m_SINGLEQUOTE_);\n\n(G__42974[(2)] = n__$1);\n\nreturn G__42974;\n});\n\nnet.cgrand.xforms.rfs.sd.cljs$lang$maxFixedArity = 2;\n\n\n/**\n * Reducing function that returns the last value.\n */\nnet.cgrand.xforms.rfs.last = (function net$cgrand$xforms$rfs$last(var_args){\nvar G__42976 = arguments.length;\nswitch (G__42976) {\ncase 0:\nreturn net.cgrand.xforms.rfs.last.cljs$core$IFn$_invoke$arity$0();\n\nbreak;\ncase 1:\nreturn net.cgrand.xforms.rfs.last.cljs$core$IFn$_invoke$arity$1((arguments[(0)]));\n\nbreak;\ncase 2:\nreturn net.cgrand.xforms.rfs.last.cljs$core$IFn$_invoke$arity$2((arguments[(0)]),(arguments[(1)]));\n\nbreak;\ndefault:\nthrow (new Error([\"Invalid arity: \",cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join('')));\n\n}\n});\n\nnet.cgrand.xforms.rfs.last.cljs$core$IFn$_invoke$arity$0 = (function (){\nreturn null;\n});\n\nnet.cgrand.xforms.rfs.last.cljs$core$IFn$_invoke$arity$1 = (function (x){\nreturn x;\n});\n\nnet.cgrand.xforms.rfs.last.cljs$core$IFn$_invoke$arity$2 = (function (_,x){\nreturn x;\n});\n\nnet.cgrand.xforms.rfs.last.cljs$lang$maxFixedArity = 2;\n\n\n/**\n * Reducing function that returns the first logical true value.\n */\nnet.cgrand.xforms.rfs.some = (function net$cgrand$xforms$rfs$some(var_args){\nvar G__42978 = arguments.length;\nswitch (G__42978) {\ncase 0:\nreturn net.cgrand.xforms.rfs.some.cljs$core$IFn$_invoke$arity$0();\n\nbreak;\ncase 1:\nreturn net.cgrand.xforms.rfs.some.cljs$core$IFn$_invoke$arity$1((arguments[(0)]));\n\nbreak;\ncase 2:\nreturn net.cgrand.xforms.rfs.some.cljs$core$IFn$_invoke$arity$2((arguments[(0)]),(arguments[(1)]));\n\nbreak;\ndefault:\nthrow (new Error([\"Invalid arity: \",cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join('')));\n\n}\n});\n\nnet.cgrand.xforms.rfs.some.cljs$core$IFn$_invoke$arity$0 = (function (){\nreturn null;\n});\n\nnet.cgrand.xforms.rfs.some.cljs$core$IFn$_invoke$arity$1 = (function (x){\nreturn x;\n});\n\nnet.cgrand.xforms.rfs.some.cljs$core$IFn$_invoke$arity$2 = (function (_,x){\nif(cljs.core.truth_(x)){\nreturn cljs.core.reduced(x);\n} else {\nreturn null;\n}\n});\n\nnet.cgrand.xforms.rfs.some.cljs$lang$maxFixedArity = 2;\n\n\n/**\n * Like xforms/str but returns a StringBuilder.\n */\nnet.cgrand.xforms.rfs.str_BANG_ = (function net$cgrand$xforms$rfs$str_BANG_(var_args){\nvar G__42980 = arguments.length;\nswitch (G__42980) {\ncase 0:\nreturn net.cgrand.xforms.rfs.str_BANG_.cljs$core$IFn$_invoke$arity$0();\n\nbreak;\ncase 1:\nreturn net.cgrand.xforms.rfs.str_BANG_.cljs$core$IFn$_invoke$arity$1((arguments[(0)]));\n\nbreak;\ncase 2:\nreturn net.cgrand.xforms.rfs.str_BANG_.cljs$core$IFn$_invoke$arity$2((arguments[(0)]),(arguments[(1)]));\n\nbreak;\ndefault:\nthrow (new Error([\"Invalid arity: \",cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join('')));\n\n}\n});\n\nnet.cgrand.xforms.rfs.str_BANG_.cljs$core$IFn$_invoke$arity$0 = (function (){\nreturn (new goog.string.StringBuffer());\n});\n\nnet.cgrand.xforms.rfs.str_BANG_.cljs$core$IFn$_invoke$arity$1 = (function (sb){\nvar x_42993 = sb;\nif((x_42993 instanceof goog.string.StringBuffer)){\nreturn x_42993;\n} else {\nreturn (new goog.string.StringBuffer(cljs.core.str.cljs$core$IFn$_invoke$arity$1(sb)));\n}\n});\n\nnet.cgrand.xforms.rfs.str_BANG_.cljs$core$IFn$_invoke$arity$2 = (function (sb,x){\nreturn (function (){var x_42994 = sb;\nif((x_42994 instanceof goog.string.StringBuffer)){\nreturn x_42994;\n} else {\nreturn (new goog.string.StringBuffer(cljs.core.str.cljs$core$IFn$_invoke$arity$1(sb)));\n}\n})().append(x);\n});\n\nnet.cgrand.xforms.rfs.str_BANG_.cljs$lang$maxFixedArity = 2;\n\n\n/**\n * Reducing function to build strings in linear time. Acts as replacement for clojure.core/str in a reduce/transduce call.\n */\nnet.cgrand.xforms.rfs.str = cljs.core.completing.cljs$core$IFn$_invoke$arity$2(net.cgrand.xforms.rfs.str_BANG_,cljs.core.str);\n","~:ns-info",["^ ","~:rename-macros",null,"~:renames",["^ "],"~:meta",["^ ","~:author","Christophe Grand","~:file","net/cgrand/xforms/rfs.cljc","~:line",1,"~:column",5,"~:end-line",1,"~:end-column",26],"~:ns-aliases",["^ ","~$cljs.loader","~$shadow.loader"],"~:use-macros",["^ ","~$or-instance?","~$net.cgrand.xforms.rfs"],"~:excludes",["~#set",["~$last","~$min","~$some","~$str","~$max"]],"~:macros",["^ "],"~:name","^A","~:op","~:ns","~:imports",["^ ","~$StringBuffer","~$goog.string.StringBuffer"],"~:requires",["^ ","~$cljs.core","^Q","~$core","^Q","^O","^O","^N","^O","~$goog","^S"],"~:seen",["^C",["~:require","~:require-macros"]],"~:uses",null,"^V",["^ ","~$net.cgrand.macrovich","^X","~$macros","^X","^A","^A","^Q","^Q","^R","^Q"],"~:form",["~#list",["~$ns","^A",["^ ","^6","Christophe Grand"],["^[",["~:refer-clojure","~:exclude",["^G","^D","^E","^H","^F"]]],["^[",["^V",["^X","~:as","^Y"],["^A","~:refer",["^@"]]]],["^[",["^U",["^Q","^13","^R"]]],["^[",["~:import",["~$goog.string","^N"]]]]],"~:flags",["^ ","^V",["^C",[]],"^U",["^C",[]]],"~:js-deps",["^ "],"~:deps",["^S","^Q","^O"]],"^L","^A","~:resource-id",["~:shadow.build.classpath/resource","net/cgrand/xforms/rfs.cljc"],"~:compiled-at",1553779913104,"~:resource-name","net/cgrand/xforms/rfs.cljc","~:warnings",[],"~:source","(ns net.cgrand.xforms.rfs\n  {:author \"Christophe Grand\"}\n  (:refer-clojure :exclude [str last min max some])\n  #?(:cljs (:require-macros\n             [net.cgrand.macrovich :as macros]\n             [net.cgrand.xforms.rfs :refer [or-instance?]])\n      :clj (:require [net.cgrand.macrovich :as macros]))\n  (:require [#?(:clj clojure.core :cljs cljs.core) :as core])\n  #?(:cljs (:import [goog.string StringBuffer])))\n\n(macros/deftime\n  (defmacro ^:private or-instance? [class x y]\n    (let [xsym (gensym 'x_)]\n      `(let [~xsym ~x]\n         (if (instance? ~class ~xsym) ~(with-meta xsym {:tag class}) ~y)))))\n\n(declare str!)\n\n(macros/usetime\n\n#? (:cljs\n     (defn ^:private cmp [f a b]\n       (let [r (f a b)]\n         (cond\n           (number? r) r\n           r -1\n           (f b a) 1\n           :else 0))))\n  \n(defn minimum\n ([comparator]\n   (fn\n     ([] nil)\n     ([x] x)\n     ([a b] (cond\n              (nil? a) b\n              (nil? b) a\n              (pos? (#?(:clj .compare :cljs cmp) comparator a b)) b\n              :else a))))\n ([#?(:clj ^java.util.Comparator comparator :cljs comparator) absolute-maximum]\n   (fn\n     ([] ::+∞)\n     ([x] (if (#?(:clj identical? :cljs keyword-identical?) ::+∞ x)\n            absolute-maximum\n            x))\n     ([a b] (if (or (#?(:clj identical? :cljs keyword-identical?) ::+∞ a) (pos? (#?(:clj .compare :cljs cmp) comparator a b))) b a)))))\n\n(defn maximum\n  ([comparator]\n    (fn\n     ([] nil)\n     ([x] x)\n     ([a b] (cond\n              (nil? a) b\n              (nil? b) a\n              (neg? (#?(:clj .compare :cljs cmp) comparator a b)) b\n              :else a))))\n  ([#?(:clj ^java.util.Comparator comparator :cljs comparator) absolute-minimum]\n    (fn\n      ([] ::-∞)\n      ([x] (if (#?(:clj identical? :cljs keyword-identical?) ::-∞ x)\n             absolute-minimum\n             x))\n      ([a b] (if (or (#?(:clj identical? :cljs keyword-identical?) ::-∞ a) (neg? (#?(:clj .compare :cljs cmp) comparator a b))) b a)))))\n\n(def min (minimum compare))\n\n(def max (maximum compare))\n\n(defn avg\n  \"Reducing fn to compute the arithmetic mean.\"\n  ([] nil)\n  ([^doubles acc] (when acc (/ (aget acc 1) (aget acc 0))))\n  ([acc x] (avg acc x 1))\n  ([^doubles acc x w] ; weighted mean\n    (let [acc (or acc #?(:clj (double-array 3) :cljs #js [0.0 0.0]))]\n      (doto acc\n        (aset 0 (+ (aget acc 0) w))\n        (aset 1 (+ (aget acc 1) (* w x)))))))\n\n(defn sd\n  \"Reducing fn to compute the standard deviation. Returns 0 if no or only one item.\"\n  ([] #?(:clj (double-array 3) :cljs #js [0.0 0.0 0.0]))\n  ([^doubles a]\n    (let [s (aget a 0) n (aget a 2)]\n      (if (< 1 n)\n        (Math/sqrt (/ s (dec n)))\n        0.0)))\n  ([^doubles a x]\n    (let [s (aget a 0) m (aget a 1) n (aget a 2)\n          d (- x m)\n          n (inc n)\n          m' (+ m (/ d n))]\n      (doto a\n        (aset 0 (+ s (* d (- x m'))))\n        (aset 1 m')\n        (aset 2 n)))))\n\n(defn last\n  \"Reducing function that returns the last value.\"\n  ([] nil)\n  ([x] x)\n  ([_ x] x))\n\n(defn some\n  \"Reducing function that returns the first logical true value.\"\n  ([] nil)\n  ([x] x)\n  ([_ x] (when x (reduced x))))\n\n(defn str!\n  \"Like xforms/str but returns a StringBuilder.\"\n  ([] (#?(:clj StringBuilder. :cljs StringBuffer.)))\n  ([sb] (or-instance? #?(:clj StringBuilder :cljs StringBuffer) sb (#?(:clj StringBuilder. :cljs StringBuffer.) (core/str sb)))) ; the instance? checks are for compatibility with str in case of seeded reduce/transduce.\n  ([sb x] (.append (or-instance? #?(:clj StringBuilder :cljs StringBuffer) sb (#?(:clj StringBuilder. :cljs StringBuffer.) (core/str sb))) x)))\n\n(def str\n  \"Reducing function to build strings in linear time. Acts as replacement for clojure.core/str in a reduce/transduce call.\"\n  (completing str! core/str))\n\n#_(defn juxt\n   \"Returns a reducing fn which compute all rfns at once and whose final return\n   value is a vector of the final return values of each rfns.\"\n   [& rfns]\n   (let [rfns (mapv ensure-kvrf rfns)]\n     (kvrf\n       ([] (mapv #(vector % (volatile! (%))) rfns))\n       ([acc] (mapv (fn [[rf vacc]] (rf (unreduced @vacc))) acc))\n       ([acc x]\n         (let [some-unreduced (core/reduce (fn [some-unreduced [rf vacc]] \n                                            (when-not (reduced? @vacc) (vswap! vacc rf x) true))\n                                false acc)]\n           (if some-unreduced acc (reduced acc))))\n       ([acc k v]\n         (let [some-unreduced (core/reduce (fn [some-unreduced [rf vacc]] \n                                            (when-not (reduced? @vacc) (vswap! vacc rf k v) true))\n                                false acc)]\n           (if some-unreduced acc (reduced acc)))))))\n\n#_(defn juxt-map\n   [& key-rfns]\n   (let [f (apply juxt (take-nth 2 (next key-rfns)))\n         keys (vec (take-nth 2 key-rfns))]\n     (let [f (ensure-kvrf f)]\n       (kvrf\n         ([] (f))\n         ([acc] (zipmap keys (f acc)))\n         ([acc x] (f acc x))\n         ([acc k v] (f acc k v))))))\n)\n","~:reader-features",["^C",["~:cljs"]],"~:cljc",true,"~:source-map-compact",["^ ","mappings","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","names",["net.cgrand.xforms.rfs/cmp","f","a","b","r","var_args","G__42956","net.cgrand.xforms.rfs/minimum","js/Error","comparator","x","absolute-maximum","cljs.core/keyword-identical?","G__42958","net.cgrand.xforms.rfs/maximum","absolute-minimum","net.cgrand.xforms.rfs/min","net.cgrand.xforms.rfs.minimum.cljs$core$IFn$_invoke$arity$1","cljs.core/compare","net.cgrand.xforms.rfs/max","net.cgrand.xforms.rfs.maximum.cljs$core$IFn$_invoke$arity$1","G__42960","net.cgrand.xforms.rfs/avg","acc","net.cgrand.xforms.rfs.avg.cljs$core$IFn$_invoke$arity$3","w","or__4131__auto__","G__42962","G__42972","net.cgrand.xforms.rfs/sd","s","n","G__42973","Math/sqrt","m","d","m'","G__42974","G__42976","net.cgrand.xforms.rfs/last","_","G__42978","net.cgrand.xforms.rfs/some","cljs.core/reduced","G__42980","net.cgrand.xforms.rfs/str!","js/goog.string.StringBuffer","sb","x_42993","x_42994","net.cgrand.xforms.rfs/str","cljs.core.completing.cljs$core$IFn$_invoke$arity$2","cljs.core/str"]]],"~:cache-keys",["~#cmap",[["~:macro","^Q"],[1550407030000],["^1;","goog/math/math.js"],[1550409022000,"~:shadow.build.compiler/resolve",["^ ","~:require-id",null,"~:deps-ids",["^C",[]],"~:deps-syms",["^S","~$goog.array","~$goog.asserts"]]],["^1;","net/cgrand/xforms/rfs.cljc"],[1533590554000,"^1I",["^ ","^1J",null,"^1K",["^C",[]],"^1L",["^S","^Q","^O"]]],["^1;","goog/array/array.js"],[1550409022000,"^1I",["^ ","^1J",null,"^1K",["^C",[]],"^1L",["^S","^1N"]]],["^1H","^X"],[1533155354000],["^1;","goog/debug/error.js"],[1550409022000,"^1I",["^ ","^1J",null,"^1K",["^C",[]],"^1L",["^S"]]],["^1;","goog/dom/nodetype.js"],[1550409022000,"^1I",["^ ","^1J",null,"^1K",["^C",[]],"^1L",["^S"]]],["^1;","goog/object/object.js"],[1550409022000,"^1I",["^ ","^1J",null,"^1K",["^C",[]],"^1L",["^S"]]],"~:SHADOW-TIMESTAMP",[1551533258000,1550407030000],["^1;","goog/math/long.js"],[1550409022000,"^1I",["^ ","^1J",null,"^1K",["^C",[]],"^1L",["^S","^1N","~$goog.reflect"]]],["^1;","goog/string/internal.js"],[1550409022000,"^1I",["^ ","^1J",null,"^1K",["^C",[]],"^1L",["^S"]]],["^1;","goog/functions/functions.js"],[1550409022000,"^1I",["^ ","^1J",null,"^1K",["^C",[]],"^1L",["^S"]]],["^1;","goog/structs/map.js"],[1550409022000,"^1I",["^ ","^1J",null,"^1K",["^C",[]],"^1L",["^S","~$goog.iter.Iterator","~$goog.iter.StopIteration"]]],["^1;","goog/asserts/asserts.js"],[1550409022000,"^1I",["^ ","^1J",null,"^1K",["^C",[]],"^1L",["^S","~$goog.debug.Error","~$goog.dom.NodeType"]]],["^1;","goog/uri/uri.js"],[1550409022000,"^1I",["^ ","^1J",null,"^1K",["^C",[]],"^1L",["^S","^1M","^1N","^16","~$goog.structs","~$goog.structs.Map","~$goog.uri.utils","~$goog.uri.utils.ComponentIndex","~$goog.uri.utils.StandardQueryParam"]]],["^1H","^A"],[1533590554000],["^1;","goog/base.js"],[1550409022000,"^1I",["^ ","^1J",null,"^1K",["^C",[]],"^1L",[]]],["^1;","goog/structs/structs.js"],[1550409022000,"^1I",["^ ","^1J",null,"^1K",["^C",[]],"^1L",["^S","^1M","~$goog.object"]]],["^1;","goog/string/string.js"],[1550409022000,"^1I",["^ ","^1J",null,"^1K",["^C",[]],"^1L",["^S","~$goog.string.internal"]]],["^1;","goog/reflect/reflect.js"],[1550409022000,"^1I",["^ ","^1J",null,"^1K",["^C",[]],"^1L",["^S"]]],["^1;","goog/string/stringbuffer.js"],[1550409022000,"^1I",["^ ","^1J",null,"^1K",["^C",[]],"^1L",["^S"]]],["^1;","goog/iter/iter.js"],[1550409022000,"^1I",["^ ","^1J",null,"^1K",["^C",[]],"^1L",["^S","^1M","^1N","~$goog.functions","~$goog.math"]]],["^1;","cljs/core.cljs"],[1550407030000,"^1I",["^ ","^1J",null,"^1K",["^C",[]],"^1L",["~$goog.math.Long","~$goog.math.Integer","^16","^1Z","^1M","~$goog.Uri","^O"]]],["^1;","goog/math/integer.js"],[1550409022000,"^1I",["^ ","^1J",null,"^1K",["^C",[]],"^1L",["^S"]]],["^1;","goog/uri/utils.js"],[1550409022000,"^1I",["^ ","^1J",null,"^1K",["^C",[]],"^1L",["^S","^1M","^1N","^16"]]]]],"~:analyzer",["^ ","^3",null,"^4",["^ "],"^5",["^ ","^6","Christophe Grand","^7","net/cgrand/xforms/rfs.cljc","^8",1,"^9",5,"^:",1,"^;",26],"^<",["^ ","^=","^>"],"^?",["^ ","^@","^A"],"^B",["^C",["^D","^E","^F","^G","^H"]],"^I",["^ "],"^J","^A","^M",["^ ","^N","^O"],"^P",["^ ","^Q","^Q","^R","^Q","^O","^O","^N","^O","^S","^S"],"^T",["^C",["^U","^V"]],"~:shadow/js-access-global",["^C",["Error"]],"^W",null,"~:defs",["^ ","^D",["^ ","~:protocol-inline",null,"^5",["^ ","^7","net/cgrand/xforms/rfs.cljc","^8",99,"^9",7,"^:",99,"^;",11,"~:arglists",["^[",["~$quote",["^[",[[],["~$x"],["~$_","~$x"]]]]],"~:doc","Reducing function that returns the last value.","~:top-fn",["^ ","~:variadic?",false,"~:fixed-arity",2,"~:max-fixed-arity",2,"~:method-params",["^[",[[],["~$x"],["~$_","~$x"]]],"^29",["^[",[[],["~$x"],["~$_","~$x"]]],"~:arglists-meta",["^[",[null,null,null]]]],"^J","~$net.cgrand.xforms.rfs/last","^7","net/cgrand/xforms/rfs.cljc","^;",11,"^2<",["^ ","^2=",false,"^2>",2,"^2?",2,"^2@",["^[",[[],["~$x"],["~$_","~$x"]]],"^29",["^[",[[],["~$x"],["~$_","~$x"]]],"^2A",["^[",[null,null,null]]],"^2@",["^[",[[],["~$x"],["~$_","~$x"]]],"~:protocol-impl",null,"^2>",2,"^2A",["^[",[null,null,null]],"^9",1,"^2=",false,"~:methods",[["^ ","^2>",0,"^2=",false,"~:tag","~$clj-nil"],["^ ","^2>",1,"^2=",false],["^ ","^2>",2,"^2=",false]],"^8",99,"^:",99,"^2?",2,"~:fn-var",true,"^29",["^[",[[],["~$x"],["~$_","~$x"]]],"^2;","Reducing function that returns the last value."],"^E",["^ ","^J","~$net.cgrand.xforms.rfs/min","^7","net/cgrand/xforms/rfs.cljc","^8",66,"^9",1,"^:",66,"^;",9,"^5",["^ ","^7","net/cgrand/xforms/rfs.cljc","^8",66,"^9",6,"^:",66,"^;",9],"^2E","~$function"],"~$cmp",["^ ","^28",null,"^5",["^ ","^7","net/cgrand/xforms/rfs.cljc","^8",22,"^9",22,"^:",22,"^;",25,"~:private",true,"^29",["^[",["^2:",["^[",[["~$f","~$a","~$b"]]]]]],"^2K",true,"^J","~$net.cgrand.xforms.rfs/cmp","^7","net/cgrand/xforms/rfs.cljc","^;",25,"^2@",["^[",[["~$f","~$a","~$b"]]],"^2C",null,"^2A",["^[",[null,null]],"^9",6,"^2=",false,"^8",22,"~:ret-tag","~$number","^:",22,"^2?",3,"^2G",true,"^29",["^[",["^2:",["^[",[["~$f","~$a","~$b"]]]]]],"~$maximum",["^ ","^28",null,"^5",["^ ","^7","net/cgrand/xforms/rfs.cljc","^8",48,"^9",7,"^:",48,"^;",14,"^29",["^[",["^2:",["^[",[["~$comparator"],["^2P","~$absolute-minimum"]]]]],"^2<",["^ ","^2=",false,"^2>",2,"^2?",2,"^2@",["^[",[["^2P"],["^2P","^2Q"]]],"^29",["^[",[["^2P"],["^2P","^2Q"]]],"^2A",["^[",[null,null]]]],"^J","~$net.cgrand.xforms.rfs/maximum","^7","net/cgrand/xforms/rfs.cljc","^;",14,"^2<",["^ ","^2=",false,"^2>",2,"^2?",2,"^2@",["^[",[["^2P"],["^2P","^2Q"]]],"^29",["^[",[["^2P"],["^2P","^2Q"]]],"^2A",["^[",[null,null]]],"^2@",["^[",[["^2P"],["^2P","^2Q"]]],"^2C",null,"^2>",2,"^2A",["^[",[null,null]],"^9",1,"^2=",false,"^2D",[["^ ","^2>",1,"^2=",false,"^2E","^2I"],["^ ","^2>",2,"^2=",false,"^2E","^2I"]],"^8",48,"^:",48,"^2?",2,"^2G",true,"^29",["^[",[["^2P"],["^2P","^2Q"]]]],"^F",["^ ","^28",null,"^5",["^ ","^7","net/cgrand/xforms/rfs.cljc","^8",105,"^9",7,"^:",105,"^;",11,"^29",["^[",["^2:",["^[",[[],["~$x"],["~$_","~$x"]]]]],"^2;","Reducing function that returns the first logical true value.","^2<",["^ ","^2=",false,"^2>",2,"^2?",2,"^2@",["^[",[[],["~$x"],["~$_","~$x"]]],"^29",["^[",[[],["~$x"],["~$_","~$x"]]],"^2A",["^[",[null,null,null]]]],"^J","~$net.cgrand.xforms.rfs/some","^7","net/cgrand/xforms/rfs.cljc","^;",11,"^2<",["^ ","^2=",false,"^2>",2,"^2?",2,"^2@",["^[",[[],["~$x"],["~$_","~$x"]]],"^29",["^[",[[],["~$x"],["~$_","~$x"]]],"^2A",["^[",[null,null,null]]],"^2@",["^[",[[],["~$x"],["~$_","~$x"]]],"^2C",null,"^2>",2,"^2A",["^[",[null,null,null]],"^9",1,"^2=",false,"^2D",[["^ ","^2>",0,"^2=",false,"^2E","^2F"],["^ ","^2>",1,"^2=",false],["^ ","^2>",2,"^2=",false,"^2E",["^C",["~$cljs.core/Reduced","^2F"]]]],"^8",105,"^:",105,"^2?",2,"^2G",true,"^29",["^[",[[],["~$x"],["~$_","~$x"]]],"^2;","Reducing function that returns the first logical true value."],"^G",["^ ","^J","~$net.cgrand.xforms.rfs/str","^7","net/cgrand/xforms/rfs.cljc","^8",117,"^9",1,"^:",117,"^;",9,"^5",["^ ","^7","net/cgrand/xforms/rfs.cljc","^8",117,"^9",6,"^:",117,"^;",9],"^2;","Reducing function to build strings in linear time. Acts as replacement for clojure.core/str in a reduce/transduce call.","^2E","^2I"],"^H",["^ ","^J","~$net.cgrand.xforms.rfs/max","^7","net/cgrand/xforms/rfs.cljc","^8",68,"^9",1,"^:",68,"^;",9,"^5",["^ ","^7","net/cgrand/xforms/rfs.cljc","^8",68,"^9",6,"^:",68,"^;",9],"^2E","^2I"],"~$minimum",["^ ","^28",null,"^5",["^ ","^7","net/cgrand/xforms/rfs.cljc","^8",30,"^9",7,"^:",30,"^;",14,"^29",["^[",["^2:",["^[",[["^2P"],["^2P","~$absolute-maximum"]]]]],"^2<",["^ ","^2=",false,"^2>",2,"^2?",2,"^2@",["^[",[["^2P"],["^2P","^2X"]]],"^29",["^[",[["^2P"],["^2P","^2X"]]],"^2A",["^[",[null,null]]]],"^J","~$net.cgrand.xforms.rfs/minimum","^7","net/cgrand/xforms/rfs.cljc","^;",14,"^2<",["^ ","^2=",false,"^2>",2,"^2?",2,"^2@",["^[",[["^2P"],["^2P","^2X"]]],"^29",["^[",[["^2P"],["^2P","^2X"]]],"^2A",["^[",[null,null]]],"^2@",["^[",[["^2P"],["^2P","^2X"]]],"^2C",null,"^2>",2,"^2A",["^[",[null,null]],"^9",1,"^2=",false,"^2D",[["^ ","^2>",1,"^2=",false,"^2E","^2I"],["^ ","^2>",2,"^2=",false,"^2E","^2I"]],"^8",30,"^:",30,"^2?",2,"^2G",true,"^29",["^[",[["^2P"],["^2P","^2X"]]]],"~$str!",["^ ","^28",null,"^5",["^ ","^7","net/cgrand/xforms/rfs.cljc","^8",111,"^9",7,"^:",111,"^;",11,"^29",["^[",["^2:",["^[",[[],["~$sb"],["^2[","~$x"]]]]],"^2;","Like xforms/str but returns a StringBuilder.","^2<",["^ ","^2=",false,"^2>",2,"^2?",2,"^2@",["^[",[[],["^2["],["^2[","~$x"]]],"^29",["^[",[[],["^2["],["^2[","~$x"]]],"^2A",["^[",[null,null,null]]]],"^J","~$net.cgrand.xforms.rfs/str!","^7","net/cgrand/xforms/rfs.cljc","^;",11,"^2<",["^ ","^2=",false,"^2>",2,"^2?",2,"^2@",["^[",[[],["^2["],["^2[","~$x"]]],"^29",["^[",[[],["^2["],["^2[","~$x"]]],"^2A",["^[",[null,null,null]]],"^2@",["^[",[[],["^2["],["^2[","~$x"]]],"^2C",null,"^2>",2,"^2A",["^[",[null,null,null]],"^9",1,"^2=",false,"^2D",[["^ ","^2>",0,"^2=",false,"^2E","~$js/goog.string.StringBuffer"],["^ ","^2>",1,"^2=",false,"^2E",["^C",["^N","^31"]]],["^ ","^2>",2,"^2=",false,"^2E","~$any"]],"^8",111,"^:",111,"^2?",2,"^2G",true,"^29",["^[",[[],["^2["],["^2[","~$x"]]],"^2;","Like xforms/str but returns a StringBuilder."],"~$avg",["^ ","^28",null,"^5",["^ ","^7","net/cgrand/xforms/rfs.cljc","^8",70,"^9",7,"^:",70,"^;",10,"^29",["^[",["^2:",["^[",[[],["~$acc"],["^34","~$x"],["^34","~$x","~$w"]]]]],"^2;","Reducing fn to compute the arithmetic mean.","^2<",["^ ","^2=",false,"^2>",3,"^2?",3,"^2@",["^[",[[],["^34"],["^34","~$x"],["^34","~$x","~$w"]]],"^29",["^[",[[],["^34"],["^34","~$x"],["^34","~$x","~$w"]]],"^2A",["^[",[null,null,null,null]]]],"^J","~$net.cgrand.xforms.rfs/avg","^7","net/cgrand/xforms/rfs.cljc","^;",10,"^2<",["^ ","^2=",false,"^2>",3,"^2?",3,"^2@",["^[",[[],["^34"],["^34","~$x"],["^34","~$x","~$w"]]],"^29",["^[",[[],["^34"],["^34","~$x"],["^34","~$x","~$w"]]],"^2A",["^[",[null,null,null,null]]],"^2@",["^[",[[],["^34"],["^34","~$x"],["^34","~$x","~$w"]]],"^2C",null,"^2>",3,"^2A",["^[",[null,null,null,null]],"^9",1,"^2=",false,"^2D",[["^ ","^2>",0,"^2=",false,"^2E","^2F"],["^ ","^2>",1,"^2=",false,"^2E",["^C",["^2N","^2F"]]],["^ ","^2>",2,"^2=",false,"^2E","^32"],["^ ","^2>",3,"^2=",false,"^2E",["^C",["~$array","~$doubles"]]]],"^8",70,"^:",70,"^2?",3,"^2G",true,"^29",["^[",[[],["^34"],["^34","~$x"],["^34","~$x","~$w"]]],"^2;","Reducing fn to compute the arithmetic mean."],"~$sd",["^ ","^28",null,"^5",["^ ","^7","net/cgrand/xforms/rfs.cljc","^8",81,"^9",7,"^:",81,"^;",9,"^29",["^[",["^2:",["^[",[[],["~$a"],["~$a","~$x"]]]]],"^2;","Reducing fn to compute the standard deviation. Returns 0 if no or only one item.","^2<",["^ ","^2=",false,"^2>",2,"^2?",2,"^2@",["^[",[[],["~$a"],["~$a","~$x"]]],"^29",["^[",[[],["~$a"],["~$a","~$x"]]],"^2A",["^[",[null,null,null]]]],"^J","~$net.cgrand.xforms.rfs/sd","^7","net/cgrand/xforms/rfs.cljc","^;",9,"^2<",["^ ","^2=",false,"^2>",2,"^2?",2,"^2@",["^[",[[],["~$a"],["~$a","~$x"]]],"^29",["^[",[[],["~$a"],["~$a","~$x"]]],"^2A",["^[",[null,null,null]]],"^2@",["^[",[[],["~$a"],["~$a","~$x"]]],"^2C",null,"^2>",2,"^2A",["^[",[null,null,null]],"^9",1,"^2=",false,"^2D",[["^ ","^2>",0,"^2=",false,"^2E","^36"],["^ ","^2>",1,"^2=",false,"^2E",["^C",["^32","^2N"]]],["^ ","^2>",2,"^2=",false,"^2E","^37"]],"^8",81,"^:",81,"^2?",2,"^2G",true,"^29",["^[",[[],["~$a"],["~$a","~$x"]]],"^2;","Reducing fn to compute the standard deviation. Returns 0 if no or only one item."]],"^V",["^ ","^X","^X","^Y","^X","^A","^A","^Q","^Q","^R","^Q"],"~:cljs.analyzer/constants",["^ ","^T",["^C",["~:net.cgrand.xforms.rfs/+∞","~:net.cgrand.xforms.rfs/-∞","~:else"]],"~:order",["^3=","^3;","^3<"]],"^17",["^ ","^V",["^C",[]],"^U",["^C",[]]],"^18",["^ "],"^19",["^S","^Q","^O"]],"^L","^A","~:ns-specs",["^ "],"~:ns-speced-vars",[],"~:compiler-options",["^1G",[["^3A","~:static-fns"],true,["^3A","~:elide-asserts"],false,["^3A","~:optimize-constants"],null,["^3A","^1>"],null,["^3A","~:external-config"],null,["^3A","~:tooling-config"],null,["^3A","~:emit-constants"],null,["^3A","~:load-tests"],null,["^3A","~:infer-externs"],true,["^3A","^1@"],null,["~:js-options","~:js-provider"],"^U",["~:mode"],"~:dev",["^3A","~:fn-invoke-direct"],null,["^3A","~:source-map"],"/dev/null"]]]